name: "Labeler: Test Issue Model"

on:
  workflow_call:
    inputs:
      github_token:
        description: "The GitHub token (defaults to action token)"
        type: string
      repository:
        description: "The org/repo to download data from (defaults to current repository)"
        type: string

      label_prefix:
        description: "Label Prefix"
        type: string
        required: true
      threshold:
        description: "The minimum confidence score for a label prediction"
        type: number
        required: true

      issue_limit:
        description: "Max number of items to include in the test"
        type: number
      model_cache_key:
        description: "The optional cache key suffix to use for loading the model (defaults to repository name)"
        type: string

  workflow_dispatch:
    inputs:
      github_token:
        description: "The GitHub token (defaults to action token)"
        type: string
      repository:
        description: "The org/repo to use (defaults to current repository)"
        type: string

      label_prefix:
        description: "Label Prefix"
        default: "area-"
        required: true
      threshold:
        description: "The minimum confidence score for a label prediction"
        type: number
        default: 0.40
        required: true

      issue_limit:
        description: "Max number of items to include in the test"
        type: number
        default: 50000
      model_cache_key:
        description: "The optional cache key suffix to use for loading the model (defaults to repository name)"
        type: string

env:
  MODEL_PATH: labeler-cache/issue-model.zip
  MODEL_CACHE_KEY: github-ml-labeler/issues/model/${{ inputs.model_cache_key || inputs.repository || github.repository }}

jobs:
  test-issues:
    runs-on: ubuntu-latest

    steps:
      - name: "Check out the 'jeffhandley/github-ml-labeler' repo"
        uses: actions/checkout@v4
        with:
          repository: jeffhandley/github-ml-labeler

      # Restore cache after checkout to ensure files aren't cleaned or removed
      - name: "Restore model from cache"
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.MODEL_PATH }}
          key: ${{ env.MODEL_CACHE_KEY }}
          fail-on-cache-miss: true

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: "Run Tester"
        run: |
          dotnet run -c Release --project src/Tester -- \
            ${{ format('--token "{0}"', inputs.github_token || secrets.GITHUB_TOKEN) }}" \
            ${{ format('--repo "{0}"',inputs.repository || github.repository) }}" \
            ${{ format('--issue-model "{0}"', env.MODEL_PATH) }} \
            ${{ format('--label-prefix "{0}"', inputs.label_prefix) }}" \
            ${{ format('--threshold {0}', inputs.threshold) }} \
            ${{ inputs.issue_limit && format('--issue-limit {0}', inputs.issue_limit) }}
