name: "Labeler: Predict Pull Labels"

on:
  pull_request:
    types: [opened, edited, synchronize]

  workflow_call:
    inputs:
      pull_numbers:
        description: "Pull Numbers"
        type: string
        required: true
      label_prefix:
        description: "Label Prefix"
        type: string
        required: true
      threshold:
        description: "The minimum confidence score for a label prediction"
        type: number
        required: true

      default_label:
        description: "Default Label (leave blank for no default label)"
        type: string
      model_cache_key:
        description: "The optional cache key suffix to use for loading the model (defaults to repository name)"
        type: string

  workflow_dispatch:
    inputs:
      github_token:
        description: "The GitHub token (defaults to action token)"
        type: string
      repository:
        description: "The org/repo to use (defaults to current repository)"
        type: string

      pull_numbers:
        description: "Pull Numbers"
        type: string
        required: true
      label_prefix:
        description: "Label Prefix"
        default: "area-"
        required: true
      threshold:
        description: "The minimum confidence score for a label prediction"
        type: number
        default: 0.40
        required: true

      default_label:
        description: "Default Label (leave blank for no default label)"
        default: "needs-area-label"
      model_cache_key:
        description: "The optional cache key suffix to use for loading the model (defaults to repository name)"
        type: string

permissions:
  pull-requests: write

env:
  MODEL_PATH: labeler-cache/pull-model.zip
  MODEL_CACHE_KEY: github-ml-labeler/pulls/model/${{ inputs.model_cache_key || inputs.repository || github.repository }}

  # Apply inputs for this repository when invoked via a GitHub event
  PULL_NUMBERS: ${{ inputs.pull_numbers || github.event.number }}
  LABEL_PREFIX: ${{ inputs.label_prefix || (github.event.number && 'area-') }}
  THRESHOLD: ${{ inputs.threshold || (github.event.number && 0.40) }}
  DEFAULT_LABEL: ${{ inputs.default_label || (github.event.number && 'needs-area-label') }}

jobs:
  predict-pull:
    runs-on: ubuntu-latest

    steps:
      - name: "Check out the 'jeffhandley/github-ml-labeler' repo"
        uses: actions/checkout@v4
        with:
          repository: jeffhandley/github-ml-labeler

      # Restore cache after checkout to ensure files aren't cleaned or removed
      - name: "Restore model from cache"
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.MODEL_PATH }}
          key: ${{ env.MODEL_CACHE_KEY }}
          fail-on-cache-miss: true

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: "Run Predictor"
        run: |
          dotnet run -c Release --project src/Predictor -- \
            ${{ format('--token "{0}"', inputs.github_token || secrets.GITHUB_TOKEN) }} \
            ${{ format('--repo "{0}"', inputs.repository || github.repository) }} \
            ${{ format('--pull-model "{0}"', env.MODEL_PATH) }} \
            ${{ format('--pull-numbers "{0}"', env.PULL_NUMBERS) }} \
            ${{ format('--label-prefix "{0}"', env.LABEL_PREFIX) }} \
            ${{ format('--threshold {0}', env.THRESHOLD) }} \
            ${{ env.DEFAULT_LABEL && format('--default-label "{0}"', env.DEFAULT_LABEL) }}
