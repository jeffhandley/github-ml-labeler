name: "Labeler: Model Issues"

on:
  workflow_call:
    inputs:
      data_cache_key:
        description: "The optional cache key suffix to use for loading the data (defaults to repository name)"
        type: string
      model_cache_key:
        description: "The optional cache key suffix to use for saving the model (defaults to repository name)"
        type: string

  workflow_dispatch:
    inputs:
      data_cache_key:
        description: "The optional cache key suffix to use for loading the data (defaults to repository name)"
        type: string
      model_cache_key:
        description: "The optional cache key suffix to use for saving the model (defaults to repository name)"
        type: string

permissions:
  actions: write

env:
  DATA_PATH: labeler-cache/issue-data.tsv
  DATA_CACHE_KEY: github-ml-labeler/issues/data/${{ inputs.data_cache_key || inputs.repository || github.repository }}
  MODEL_PATH: labeler-cache/issue-model.zip
  MODEL_CACHE_KEY: github-ml-labeler/issues/model/${{ inputs.model_cache_key || inputs.repository || github.repository }}
  GH_TOKEN: ${{ github.token }}

jobs:
  model-issues:
    runs-on: ubuntu-latest
    timeout-minutes: 600

    steps:
      - name: "Check out the 'jeffhandley/github-ml-labeler' repo"
        uses: actions/checkout@v4
        with:
          repository: jeffhandley/github-ml-labeler

      # Restore cache after checkout to ensure files aren't cleaned or removed
      - name: "Restore data from cache"
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.DATA_PATH }}
          key: ${{ env.DATA_CACHE_KEY }}
          fail-on-cache-miss: true

      - name: "Check for existing model cache entry"
        id: check-cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.MODEL_PATH }}
          key: ${{ env.MODEL_CACHE_KEY }}
          fail-on-cache-miss: false

      - name: "Cache backup of existing model"
        if: steps.check-cache.outputs.cache-hit == 'true'
        id: backup-model
        uses: actions/cache/save@v4
        with:
          path: ${{ env.MODEL_PATH }}
          key: ${{ env.MODEL_CACHE_KEY }}/backup

      - name: "Delete existing cache entry"
        if: steps.check-cache.outputs.cache-hit == 'true'
        run: |
            gh api --method DELETE \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${{ github.repository }}/actions/caches?key=${{ env.MODEL_CACHE_KEY }}

            rm ${{ env.MODEL_PATH }}

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: "Run ModelCreator"
        run: |
          dotnet run --project src/ModelCreator --  \
            --issue-data ${{ env.DATA_PATH }}       \
            --issue-model ${{ env.MODEL_PATH }}

      - name: "Save model to cache"
        uses: actions/cache/save@v4
        with:
          path: ${{ env.MODEL_PATH }}
          key: ${{ env.MODEL_CACHE_KEY }}
