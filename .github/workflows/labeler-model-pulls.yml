name: "Labeler: Model Pull Requests"

on:
  schedule:
    - cron: '0 2 6 * *' # 02:00 UTC on the 6th day of the month

  workflow_call:
    inputs:
      data_repo:
        description: "The org/repo to load issue data from (defaults to current repository)"
        type: string

  workflow_dispatch:
    inputs:
      data_repo:
        description: "The org/repo to load issue data from (defaults to current repository)"
        type: string
      model_repo:
        description: "The org/repo to cache the issue model for (defaults to current repository)"
        type: string

jobs:
  model-pulls:
    runs-on: ubuntu-latest
    timeout-minutes: 600

    steps:
      - name: "Check out the '${{ github.action_repository }}' repo"
        uses: actions/checkout@v4
        repository: ${{ github.action_repository }}

      # Restore cache after checkout to ensure files aren't cleaned or removed
      - name: "Restore pull-data.tsv from 'github-ml-labeler/${{ inputs.data_repo || github.repository }}/download-pulls'"
        id: restore-cache
        uses: actions/cache@v4
        with:
          path: labeler-cache/pull-data.tsv
          key: github-ml-labeler/${{ inputs.data_repo || github.repository }}/download-pulls
          fail-on-cache-miss: true

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: "Run ModelCreator"
        run: |
          dotnet run --project src/ModelCreator -- \
            --pull-data labeler-cache/pull-data.tsv \
            --pull-model labeler-cache/pull-model.zip

      - name: "Cache pull-model.zip into 'github-ml-labeler/${{ inputs.model_repo || github.repository }}/model-pulls'"
        uses: actions/cache@v4
        with:
          path: labeler-cache/pull-model.zip
          key: github-ml-labeler/${{ inputs.model_repo || github.repository }}/model-pulls
