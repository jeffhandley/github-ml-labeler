name: "Stage Models"

on:
  workflow_call:
    inputs:
      download_issues:
        description: "Issues: Download Data"
        type: boolean
      train_issues:
        description: "Issues: Train Model"
        type: boolean
      test_issues:
        description: "Issues: Test Model"
        type: boolean
      download_pulls:
        description: "Pulls: Download Data"
        type: boolean
      train_pulls:
        description: "Pulls: Train Model"
        type: boolean
      test_pulls:
        description: "Pulls: Test Model"
        type: boolean

      label_prefix:
        description: "Label Prefix"
        type: string
        required: true
      threshold:
        description: "The minimum confidence score for a label prediction"
        type: number
        required: true

      data_limit:
        description: "Max number of items to include in the model"
        type: number

      github_token:
        description: "The GitHub token (defaults to action token)"
        type: string
      repository:
        description: "The org/repo to download data from (defaults to current repository)"
        type: string
      cache_key_suffix:
        description: "The optional cache key suffix to use for staging data/models (defaults to 'staging')"
        type: string
        default: 'staging'

env:
  GH_TOKEN: ${{ inputs.github_token || github.token }}
  REPOSITORY: ${{ inputs.repository || github.repository }}
  CACHE_KEY_SUFFIX: ${{ inputs.cache_key_suffix || 'staging' }}
  DATA_LIMIT: ${{ inputs.data_limit && fromJSON(inputs.data_limit) || 0 }}
  LABEL_PREFIX: ${{ inputs.label_prefix }}
  THRESHOLD: ${{ inputs.threshold }}

jobs:
  labeler-download-issues:
    if: ${{ inputs.download_issues }}
    permissions:
      issues: read
      actions: write
    uses: jeffhandley/github-ml-labeler/.github/workflows/download-issues.yml@main
    with:
      github_token: ${{ env.GH_TOKEN }}
      repository: ${{ env.REPOSITORY }}
      data_cache_key: ${{ env.CACHE_KEY_SUFFIX }}
      issue_limit: ${{ env.DATA_LIMIT }}
      label_prefix: ${{ env.LABEL_PREFIX }}

  labeler-train-issues:
    needs: labeler-download-issues
    if: ${{ inputs.train_issues && always() && (needs.labeler-download-issues.result == 'success' || needs.labeler-download-issues.result == 'skipped') }}
    permissions:
      actions: write
    uses: jeffhandley/github-ml-labeler/.github/workflows/train-issues.yml@main
    with:
      data_cache_key: ${{ env.CACHE_KEY_SUFFIX }}
      model_cache_key: ${{ env.CACHE_KEY_SUFFIX }}

  labeler-test-issues:
    needs: labeler-train-issues
    if: ${{ inputs.test_issues && always() && (needs.labeler-train-issues.result == 'success' || needs.labeler-train-issues.result == 'skipped') }}
    uses: jeffhandley/github-ml-labeler/.github/workflows/test-issues.yml@main
    with:
      github_token: ${{ env.GH_TOKEN }}
      repository: ${{ env.REPOSITORY }}
      model_cache_key: ${{ env.CACHE_KEY_SUFFIX }}
      label_prefix: ${{ env.LABEL_PREFIX }}
      threshold: ${{ env.THRESHOLD }}

  labeler-download-pulls:
    if: ${{ inputs.download_pulls }}
    permissions:
      pull-requests: read
      actions: write
    uses: jeffhandley/github-ml-labeler/.github/workflows/download-pulls.yml@main
    with:
      github_token: ${{ env.GH_TOKEN }}
      repository: ${{ env.REPOSITORY }}
      data_cache_key: ${{ env.CACHE_KEY_SUFFIX }}
      pull_limit: ${{ env.DATA_LIMIT }}
      label_prefix: ${{ env.LABEL_PREFIX }}

  labeler-train-pulls:
    needs: labeler-download-pulls
    if: ${{ inputs.train_pulls && always() && (needs.labeler-download-pulls.result == 'success' || needs.labeler-download-pulls.result == 'skipped') }}
    permissions:
      actions: write
    uses: jeffhandley/github-ml-labeler/.github/workflows/train-pulls.yml@main
    with:
      data_cache_key: ${{ env.CACHE_KEY_SUFFIX }}
      model_cache_key: ${{ env.CACHE_KEY_SUFFIX }}

  labeler-test-pulls:
    needs: labeler-train-pulls
    if: ${{ inputs.test_pulls && always() && (needs.labeler-train-pulls.result == 'success' || needs.labeler-train-pulls.result == 'skipped') }}
    uses: jeffhandley/github-ml-labeler/.github/workflows/test-pulls.yml@main
    with:
      github_token: ${{ env.GH_TOKEN }}
      repository: ${{ env.REPOSITORY }}
      model_cache_key: ${{ env.CACHE_KEY_SUFFIX }}
      label_prefix: ${{ env.LABEL_PREFIX }}
      threshold: ${{ env.THRESHOLD }}
