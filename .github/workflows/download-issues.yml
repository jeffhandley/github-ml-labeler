name: "Labeler: Download Issues"

on:
  workflow_call:
    inputs:
      github_token:
        description: "The GitHub token (defaults to action token)"
        type: string
      repository:
        description: "The org/repo to download data from (defaults to current repository)"
        type: string

      label_prefix:
        description: "Label prefix"
        type: string
        default: "area-"
        required: true

      issue_limit:
        description: "Max number of items to include in the model"
        type: number
      page_size:
        description: "The number of items to include on each request (max 100)"
        type: number
      page_limit:
        description: "Max pages of items to download"
        type: number
      retries:
        description: "Comma-separated list of retry delays in seconds"
        type: string
      data_cache_key:
        description: "The optional cache key suffix to use for saving the data (defaults to repository name)"
        type: string

  workflow_dispatch:
    inputs:
      github_token:
        description: "The GitHub token (defaults to action token)"
        type: string
      repository:
        description: "The org/repo to download data from (defaults to current repository)"
        type: string

      label_prefix:
        description: "Label prefix"
        type: string
        default: "area-"
        required: true

      issue_limit:
        description: "Max number of items to include in the model"
        type: number
      page_size:
        description: "The number of items to include on each request (max 100)"
        type: number
      page_limit:
        description: "Max pages of items to download"
        type: number
      retries:
        description: "Comma-separated list of retry delays in seconds"
        type: string
      data_cache_key:
        description: "The optional cache key suffix to use for saving the data (defaults to repository name)"
        type: string

permissions:
  issues: read
  actions: write

env:
  DATA_PATH: labeler-cache/issue-data.tsv
  DATA_CACHE_KEY: github-ml-labeler/issues/data/${{ inputs.data_cache_key || inputs.repository || github.repository }}
  GH_TOKEN: ${{ github.token }}

jobs:
  download-issues:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: "Check cache for existing data"
        id: check-cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.DATA_PATH }}
          key: ${{ env.DATA_CACHE_KEY }}
          fail-on-cache-miss: false

      - name: "Cache backup of existing data"
        if: steps.check-cache.outputs.cache-hit == 'true'
        id: backup-data
        uses: actions/cache/save@v4
        with:
          path: ${{ env.DATA_PATH }}
          key: ${{ env.DATA_CACHE_KEY }}/backup

      - name: "Delete existing cache entry"
        if: steps.check-cache.outputs.cache-hit == 'true'
        run: |
            gh api --method DELETE \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${{ github.repository }}/actions/caches?key=${{ env.DATA_CACHE_KEY }}

            rm ${{ env.DATA_PATH }}

      - name: "Check out the 'jeffhandley/github-ml-labeler' repo"
        uses: actions/checkout@v4
        with:
          repository: jeffhandley/github-ml-labeler

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: "Run Downloader"
        run: |
          dotnet run -c Release --project src/Downloader -- \
            ${{ format('--token "{0}"', inputs.github_token || secrets.GITHUB_TOKEN) }}" \
            ${{ format('--repo "{0}"', inputs.repository || github.repository) }}" \
            ${{ format('--issue-data "{0}"', env.DATA_PATH) }} \
            ${{ format('--label-prefix "{0}"', inputs.label_prefix) }}" \
            ${{ inputs.issue_limit && format('--issue-limit {0}', inputs.issue_limit) }} \
            ${{ inputs.retries && format('--retries "{0}"', inputs.retries) }} \
            ${{ inputs.page_size && format('--page-size {0}', inputs.page_size) }} \
            ${{ inputs.page_limit && format('--page-limit {0}', inputs.page_limit) }}

      - name: "Save data to cache"
        uses: actions/cache/save@v4
        with:
          path: ${{ env.DATA_PATH }}
          key: ${{ env.DATA_CACHE_KEY }}
