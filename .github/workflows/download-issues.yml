name: "Download Issues"

on:
  workflow_dispatch:
    inputs:
      github_token:
        description: "The GitHub token (defaults to action token)"
        type: string
      repository:
        description: "The org/repo to download data from (defaults to current repository)"
        type: string

      label_prefix:
        description: "Label prefix"
        type: string
        required: true

      issue_limit:
        description: "Max number of items to include in the model"
        type: number
      page_size:
        description: "The number of items to include on each request (max 100)"
        type: number
      page_limit:
        description: "Max pages of items to download"
        type: number
      retries:
        description: "Comma-separated list of retry delays in seconds"
        type: string
      data_cache_key:
        description: "The optional cache key suffix to use for saving the data (defaults to repository name)"
        type: string

  workflow_call:
    inputs:
      github_token:
        description: "The GitHub token (defaults to action token)"
        type: string
      repository:
        description: "The org/repo to download data from (defaults to current repository)"
        type: string

      label_prefix:
        description: "Label prefix"
        type: string
        required: true

      issue_limit:
        description: "Max number of items to include in the model"
        type: number
      page_size:
        description: "The number of items to include on each request (max 100)"
        type: number
      page_limit:
        description: "Max pages of items to download"
        type: number
      retries:
        description: "Comma-separated list of retry delays in seconds"
        type: string
      data_cache_key:
        description: "The optional cache key suffix to use for saving the data (defaults to repository name)"
        type: string

permissions:
  issues: read
  actions: write

env:
  DATA_PATH: labeler-cache/issue-data.tsv
  DATA_CACHE_KEY: github-ml-labeler/issues/data/${{ inputs.data_cache_key || inputs.repository || github.repository }}
  BACKUP_CACHE_KEY: github-ml-labeler/issues/data/${{ inputs.data_cache_key || inputs.repository || github.repository }}/backup
  GH_TOKEN: ${{ github.token }}

jobs:
  build-labeler:
    uses: jeffhandley/github-ml-labeler/.github/workflows/build-apps.yml@main

  download-issues:
    runs-on: ubuntu-24.04
    needs: build-labeler
    steps:
      - name: "Check cache for existing data"
        id: check-cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.DATA_PATH }}
          key: ${{ env.DATA_CACHE_KEY }}
          fail-on-cache-miss: false

      - name: "Check for existing backup cache entry"
        id: check-backup
        if: steps.check-cache.outputs.cache-hit == 'true'
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.DATA_PATH }}
          key: ${{ env.BACKUP_CACHE_KEY }}
          fail-on-cache-miss: false

      - name: "Abort if backup cache entry already exists"
        if: steps.check-backup.outputs.cache-hit == 'true'
        run: |
            echo "Cannot save backup of existing data. Backup cache key already exists."
            echo "Key: ${{ env.BACKUP_CACHE_KEY }}"

            exit 1

      - name: "Cache backup of existing data"
        if: steps.check-cache.outputs.cache-hit == 'true'
        id: backup-data
        uses: actions/cache/save@v4
        with:
          path: ${{ env.DATA_PATH }}
          key: ${{ env.BACKUP_CACHE_KEY }}

      - name: "Delete existing cache entry"
        if: steps.check-cache.outputs.cache-hit == 'true'
        run: |
            gh api --method DELETE \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${{ github.repository }}/actions/caches?key=${{ env.DATA_CACHE_KEY }}

            rm ${{ env.DATA_PATH }}

      - name: "Restore the labeler apps from cache"
        id: restore-apps
        uses: actions/cache/restore@v4
        with:
          path: labeler-build
          key: 'github-ml-labeler'
          fail-on-cache-miss: true

      - name: "Run Downloader"
        run: |
          ./labeler-build/Downloader/Downloader \
            ${{ format('--token "{0}"', inputs.github_token || secrets.GITHUB_TOKEN) }} \
            ${{ format('--repo "{0}"', inputs.repository || github.repository) }} \
            ${{ format('--issue-data "{0}"', env.DATA_PATH) }} \
            ${{ format('--label-prefix "{0}"', inputs.label_prefix) }} \
            ${{ inputs.retries && format('--retries "{0}"', inputs.retries) }} \
            ${{ inputs.issue_limit && format('--issue-limit {0}', inputs.issue_limit) || '' }} \
            ${{ inputs.page_size && format('--page-size {0}', inputs.page_size) || '' }} \
            ${{ inputs.page_limit && format('--page-limit {0}', inputs.page_limit) || '' }}

      - name: "Save data to cache"
        uses: actions/cache/save@v4
        with:
          path: ${{ env.DATA_PATH }}
          key: ${{ env.DATA_CACHE_KEY }}
